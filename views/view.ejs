<% 
  // definição das etapas e estados
  const steps = [
    { key: 'preparo',           label: 'Preparo',       done: !!(
         ordem.checklist_preparo?.combustivel &&
         ordem.checklist_preparo?.ferramentas &&
         ordem.checklist_preparo?.epi) },
    { key: 'inicio',            label: 'Chegada',       done: !!ordem.observacoes_inicio },
    { key: 'upload?tipo=inicio',label: 'Mídia Início',  done: ordem.fotos.inicio?.length > 0 },
    { key: 'imprevistos',       label: 'Imprevistos',   done: !!ordem.imprevistos },
    { key: 'finalizacao',       label: 'Finalização',   done: !!(
         ordem.dificuldades?.trim() ||
         ordem.recomendacoes?.trim()) },
    { key: 'upload?tipo=final', label: 'Mídia Final',   done: ordem.fotos.final?.length > 0 }
  ];

  const doneCount = steps.filter(s => s.done).length;
  const nextIdx   = steps.findIndex(s => !s.done);
  const activeIdx = nextIdx < 0 ? steps.length - 1 : nextIdx;
  const pctDone   = Math.round(doneCount / steps.length * 100);

  // nav fixo
  const listLink = `/os?tecnico=${encodeURIComponent(ordem.tecnico)}`;
  const hasNext  = activeIdx < steps.length - 1;
  const nextKey  = hasNext ? steps[activeIdx + 1].key : null;
  const mapLabel = {
    preparo: 'Preparo',
    inicio: 'Chegada',
    'upload?tipo=inicio': 'Mídia Início',
    imprevistos: 'Imprevistos',
    finalizacao: 'Finalização',
    'upload?tipo=final': 'Mídia Final'
  };

  // ações para grid, com estado
  const actions = steps.map(s => ({
    key   : s.key,
    label : s.label,
    done  : s.done,
    url   : `/os/${ordem.codigo}/${s.key}`
  }));
%>

<div class="card shadow-sm mb-4">
  <div class="card-header bg-white d-flex justify-content-between align-items-center">
    <div>
      <h3 class="mb-0">OS #<%= ordem.codigo %> – <%= ordem.titulo %></h3>
      <small class="text-muted">Técnico: <%= ordem.tecnico %></small>
    </div>
    <div>
      <% if (ordem.status === 'Pendente') { %>
        <span class="badge bg-secondary px-3">Pendente</span>
      <% } else if (ordem.status === 'Em execução') { %>
        <span class="badge bg-primary px-3">Em execução</span>
      <% } else { %>
        <span class="badge bg-success px-3">Concluído</span>
      <% } %>
    </div>
  </div>

  <div class="card-body">

    <!-- contador X/Y -->
    <div class="d-flex justify-content-end mb-2">
      <span class="fw-bold"><%= doneCount %> / <%= steps.length %> etapas concluídas</span>
    </div>

    <!-- stepper com ícones -->
    <nav aria-label="Progress">
      <ol class="list-unstyled d-flex justify-content-between mb-3">
        <% steps.forEach((step,i)=>{ %>
          <li class="text-center flex-fill position-relative">
            <div class="mx-auto mb-1 rounded-circle d-flex 
                        align-items-center justify-content-center
                        <%=
                          step.done       ? 'bg-success text-white' :
                          i===activeIdx   ? 'bg-primary text-white' :
                                            'bg-light text-muted'
                        %>" 
                 style="width:2.5rem;height:2.5rem">
              <i class="bi 
                <%=
                  step.key==='preparo'            ? 'bi-tools' :
                  step.key==='inicio'             ? 'bi-pin-map' :
                  step.key==='upload?tipo=inicio' ? 'bi-camera' :
                  step.key==='imprevistos'        ? 'bi-exclamation-triangle' :
                  step.key==='finalizacao'        ? 'bi-pencil-square' :
                                                    'bi-camera-reels'
                %>"></i>
            </div>
            <small class="<%= i===activeIdx ? 'text-primary' : '' %>">
              <%= step.label %>
            </small>
            <% if(i<steps.length-1){ %>
              <div class="position-absolute top-50 end-0 bg-light" 
                   style="width:100%;height:2px;margin-left:1.3rem;z-index:-1">
              </div>
            <% } %>
          </li>
        <% }) %>
      </ol>
    </nav>

    <!-- barra de progresso -->
    <div class="progress mb-4" style="height:1rem">
      <div class="progress-bar bg-primary" role="progressbar"
           style="width:<%= pctDone %>%;"></div>
    </div>

    <!-- grid de ações com cor dinâmica -->
    <div class="row row-cols-2 row-cols-md-3 g-3 mb-4">
      <% actions.forEach(a=>{ %>
        <div class="col">
          <a href="<%= a.url %>" 
             class="btn <%= a.done ? 'btn-success' : 'btn-outline-primary' %> 
                    w-100 h-100 py-4 
                    d-flex flex-column align-items-center 
                    justify-content-center shadow-sm">
            <i class="bi bi-<%= 
              a.key==='preparo'            ? 'tools' :
              a.key==='inicio'             ? 'pin-map' :
              a.key==='upload?tipo=inicio' ? 'camera' :
              a.key==='imprevistos'        ? 'exclamation-triangle' :
              a.key==='finalizacao'        ? 'pencil-square' :
                                             'camera-reels'
            %> fs-2 mb-2"></i>
            <span><%= a.label %></span>
          </a>
        </div>
      <% }) %>
    </div>

  </div>
</div>

<!-- navbar fixa com voltar e próximo -->
<nav class="navbar fixed-bottom bg-white border-top py-2 d-none d-md-flex">
  <div class="container d-flex justify-content-between">
    <a href="<%= listLink %>" class="btn btn-light shadow-sm">
      <i class="bi bi-list"></i> Minhas OSs
    </a>
    <% if (hasNext) { %>
      <a href="/os/<%= ordem.codigo %>/<%= nextKey %>" 
         class="btn btn-primary shadow-sm">
        Próximo: <%= mapLabel[nextKey] %> 
        <i class="bi bi-arrow-right-circle"></i>
      </a>
    <% } %>
  </div>
</nav>

<style>
  body { padding-bottom: 80px; }
</style>
